import secrets


def generate_private_key(max_prime):
    random_number = secrets.randbits(2048)
    if random_number > max_prime:
        random_number = secrets.randbits(2048)
    return random_number


def generate_public_key(p, g, private_key):
    return pow(g, private_key, p)


def main_dh():
    p = 17647895482403247067384288151615129996376445624040706321779695219620441129345770964099749140876219364939015414569323965137571178248143569997404670068518262274529035778245169074434254803276186505604648282371616257825545991584994045324995457004771886524018951150684432533100566967150063582777345116744584091918430044659857613349337494968251431466800312324670845948056182306387827628402858925901209706105826095573966679952246820668096419402895613144349603192367795556311249848213489695536535709868471461349051965185830146093695854532986576782116896386204444309045951308964738183468891091814392464790816780146232940153267
    g = 8354808731424128860830537431632922571172631036031799417877103747988590319377852301862625612402732203686601585550528531326124653271706313575570359732341968597323391284207540317058695877537413902557385987035602876914022685797017989922848178865500688438418169889082409517702541213559485962640726425186138890957800628053083589352120795509576764270715352837897823863878973267887882869200585056271543435375121743760749611137042952916491695406140740494280537783121973519051509523457072629657304688824537415795197124367865869114134207771724855149857885580007007784414090540157531092243444313959981100475533213249980755692028
    private_key = generate_private_key(p)
    public_key = generate_public_key(p, g, private_key)
    return p, g, private_key, public_key
