import secrets


def generate_private_key(max_prime):
    random_number = secrets.randbits(1024)
    if random_number > max_prime:
        random_number = secrets.randbits(1024)
    return random_number


def generate_public_key(p, g, private_key):
    return pow(g, private_key, p)


def main_dh():
    p = 129742754490069649165483499479558020776268007092172189577881291271732002768238898021638076360656345679150535442225071711314148575052464035728323075511413637923674938256820934052442988794138109752727634337184062824099165239223714370153689487154157883486095930165953010495268234497785660600922524856452674314993
    g = 82381621443974618608998888989866406610490987420220484233570264775385283524982196405493964617511327105502526059219672451026828380229416787503748831591797442887073447932036144036769105098595515644908475653392991889383531591833003954942936286386814262912896096432263447200188306906612626882134073773142456582312
    private_key = generate_private_key(p)
    public_key = generate_public_key(p, g, private_key)
    return p, g, private_key, public_key
