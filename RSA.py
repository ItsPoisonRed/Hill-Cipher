import secrets
from sympy import totient
import math

def main_rsa():
    p=158052996237990134099676614332111819021854237737275279472186971459903459968676282946081847249064001737040790060772412845959809561983752942930930010676756001774161482315962832707722054977010553051931610755724021601066049711003989498473508375743040079718438052029164453481491108847155308709216439865064283038651
    q=178979575583686243042550121077069461954025993622090978521144081996959556683860633275292491801001263659009849014176454232332619964845557795668949253964733573747111970713466399641815017789748258465142843760534818933908870380842689113323770353180979609395286913940513289271494250423854043029406277114906945453561
    n=p*q
    phi = (p - 1) * (q - 1)
    e=secrets.randbits(1024)
    invertible=False
    while not invertible:
        if math.gcd(e, phi) != 1:
            e=secrets.randbits(1024)
        else:
            invertible=True
    d=pow(e, -1, phi)

    
    return n, e, d

