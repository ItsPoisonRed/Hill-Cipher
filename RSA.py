import secrets
import math
from math import isqrt

def main_rsa():
    wiener_safe=False
    while not wiener_safe:
        p=31664628071076383890940369419468497588327069969819242378924547116313078763045957458417591157515525700156804490249919725315204706614347795605574095555733025185386966310769448379385085355806668622983661411115333190348493797641798352375394017644119050966740970929425207041875534326939699454685643710688892046791783822083882177245608600709144670475188785164801815527536380740020167485456509046665347277752940330022125028469042834725960006848864362442230255077558498890172278615660419037929650628413141113431477394479751281232706365645743996057696756187917408473997572257986946542216173552456174991923519213814736793422643
        q=26964850089074978860882759370746857767936449876458311446519997006498332131989754853751005529369857977427658720634102687683395155746134309512316693051574077915161277642351078838873886154843894435773366242506366754687106021686230154718560302917029255330224678403409181279773106339913446839280492684164324638151985203582637739924447132737248243744579911843424653926741613472849962595549824625127860061712991322736385897108836896564492616566859312422202621348565728048366279373295947006462641114935238323746425560234195961664514680867157453417240592590736637415190231395420120425110838164490170756379415675186320676877159
        n=p*q
        phi = (p - 1) * (q - 1)
        e=secrets.randbits(2048)
        invertible=False
        while not invertible:
            if math.gcd(e, phi) != 1:
                e=secrets.randbits(2048)
            else:
                invertible=True
        d=pow(e, -1, phi)
        if is_wiener_safe(n, d):
            wiener_safe=True
            return n, e, d
        else:
            wiener_safe=False

def is_wiener_safe(n, d):
    return d > (1/3) * isqrt(isqrt(n))
